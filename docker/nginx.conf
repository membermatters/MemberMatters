worker_processes 2;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex on; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  error_log /var/log/nginx/error.log warn;
  client_body_temp_path /var/www/tmp 1 2;
  sendfile on;

  upstream app_server {
    # for UNIX domain socket setups
    server localhost:8001 fail_timeout=10s;
  }

  # if another reverse proxy is used the forwarded protocol may be wrong without this check
  map $http_x_forwarded_proto $proxied_scheme {
      default   $http_x_forwarded_proto;
      ""        $scheme;
  }

  server {
    listen 8000 deferred default_server;
    client_max_body_size 10M;

    server_name _;

    keepalive_timeout 5;

    root /usr/src/app/frontend/dist/spa/;

    # no cache by default
    expires 0;
    add_header Pragma "no-cache";
    add_header Cache-Control 'no-cache, no-store, max-age=0, must-revalidate';

    location / {
        try_files $uri $uri/ /index.html;
    }

    # allow caching of any file from the following directories
    location ~ ^/(js|img|css)/ {
        expires 30d;
        add_header Pragma "public";
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # allow caching of any static file
    location /static/ {
        alias /usr/src/app/memberportal/membermatters/static/;
        expires 30d;
        add_header Pragma "public";
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location ~ ^/(api|admin|oidc) {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_x_real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxied_scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_redirect off;
        proxy_pass http://app_server;
    }

    location /ws/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
        proxy_pass http://app_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_x_real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proxied_scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        }
  }
}
